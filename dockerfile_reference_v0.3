Docker 문법 ( https://docs.docker.com/reference/dockerfile/ )

#		comment
FROM		컨테이너의 BASE IMAGE (운영환경)
MAINTAINER	이미지를 생성한 사람의 이름 및 정보(컨테이너 빌드한 사람, 임의의 Address)
LABEL		컨테이너이미지에 컨테이너의 정보를 저장(설명, 빌드날짜)
RUN		컨테이너 빌드를 위해 base image에서 실행할 commands
COPY		컨테이너 빌드시 호스트 파일을 컨테이너로 복사
ADD		컨테이너 빌드시 호스트의 파일(tar(Tape Archive),url포함)을 컨테이너로 복사
WORKDIR		컨테이너 빌드시 명령이 실행될 작업 디렉터리 설정
ENV		환경변수 지정(컨테이너 내부)
USER		명령 및 컨테이너 실행시 적용할 유저 설정(컨테이너가 만들어지면 기본적으로 root 권한 -> user(su - user))
VOLUME		파일 또는 디렉토리를 컨테이너 디렉토리로 마운트
EXPOSE		컨테이너 동작 시 외부에서 사용할 포트 지정
CMD		컨테이너 동작 시 자동으로 실행할 서비스나 스크립트 지정
ENTRYPOINT	CMD와 함께 사용하면서 command 지정 시 사용


docker 명령어 --help

이미지 검색			docker search [옵션] <이미지이름:태그명>
이미지 다운로드			docker pull [옵션] <이미지이름:태그명>
다운 받은 이미지 목록 출력	docker images
다운 받은 이미지 상세보기	docker inspect [옵션] <이미지이름:태그명>
이미지 삭제			docker rmi [옵션] <이미지이름>


컨테이너 실행 라이프 사이클
pull -> create -> start == run
컨테이너 생성		docker create [옵션] <이미지이름:태그명>		docker create --name webserver nginx:1.14
컨테이너 실행		docker start [옵션] <이미지이름:태그명>			docker start webserver
컨테이너 생성/실행	docker run [옵션] <이미지이름:태그명>			docker run --name webserver -d nginx:1.14
컨테이너 상태		docker ps [옵션]					docker ps -a
컨테이너 자세히		docker inspect webserver
컨테이너 실행 중지	docker stop [옵션] 컨테이너이름				docker stop webserver
컨테이너 삭제		docker rm [옵션] 컨테이너이름				docker rm -f webserver


실행중인 컨테이너 관리
실행중인 컨테이너 목록 확인			docker ps [옵션]
포그라운드로 실행중인 컨테이너에 연결		docker attach [옵션] 컨테이너이름
동작중인 컨테이너에 NEW 명령어 추가 실행 	docker exec [옵션] 컨테이너이름
	$ docker attach centos
	$ docker exec -it webserver /bin/bash
컨테이너에서 동작되는 프로세스 확인		docker top [옵션] 컨테이너이름
동작중인 컨테이너가 생성한 로그 보기		docker logs [옵션] 컨테이너이름
